/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ProfileIndexImport } from './routes/profile/index'
import { Route as ProductsIndexImport } from './routes/products/index'
import { Route as CartIndexImport } from './routes/cart/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as ProductsProductIdImport } from './routes/products/$productId'

// Create Virtual Routes

const WarrantyLazyImport = createFileRoute('/warranty')()
const PolicyLazyImport = createFileRoute('/policy')()
const DeliveryLazyImport = createFileRoute('/delivery')()
const ContactsLazyImport = createFileRoute('/contacts')()
const AboutLazyImport = createFileRoute('/about')()

// Create/Update Routes

const WarrantyLazyRoute = WarrantyLazyImport.update({
  path: '/warranty',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/warranty.lazy').then((d) => d.Route))

const PolicyLazyRoute = PolicyLazyImport.update({
  path: '/policy',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/policy.lazy').then((d) => d.Route))

const DeliveryLazyRoute = DeliveryLazyImport.update({
  path: '/delivery',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/delivery.lazy').then((d) => d.Route))

const ContactsLazyRoute = ContactsLazyImport.update({
  path: '/contacts',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/contacts.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIndexRoute = ProfileIndexImport.update({
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIndexRoute = ProductsIndexImport.update({
  path: '/products/',
  getParentRoute: () => rootRoute,
} as any)

const CartIndexRoute = CartIndexImport.update({
  path: '/cart/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsProductIdRoute = ProductsProductIdImport.update({
  path: '/products/$productId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/contacts': {
      preLoaderRoute: typeof ContactsLazyImport
      parentRoute: typeof rootRoute
    }
    '/delivery': {
      preLoaderRoute: typeof DeliveryLazyImport
      parentRoute: typeof rootRoute
    }
    '/policy': {
      preLoaderRoute: typeof PolicyLazyImport
      parentRoute: typeof rootRoute
    }
    '/warranty': {
      preLoaderRoute: typeof WarrantyLazyImport
      parentRoute: typeof rootRoute
    }
    '/products/$productId': {
      preLoaderRoute: typeof ProductsProductIdImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/cart/': {
      preLoaderRoute: typeof CartIndexImport
      parentRoute: typeof rootRoute
    }
    '/products/': {
      preLoaderRoute: typeof ProductsIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      preLoaderRoute: typeof ProfileIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AboutLazyRoute,
  ContactsLazyRoute,
  DeliveryLazyRoute,
  PolicyLazyRoute,
  WarrantyLazyRoute,
  ProductsProductIdRoute,
  AdminIndexRoute,
  CartIndexRoute,
  ProductsIndexRoute,
  ProfileIndexRoute,
])

/* prettier-ignore-end */
